(defwidget bar [screen screens]
  (centerbox :class "main-box"
             :orientation "v"
    (box :class "segment-top"
         :valign "start"
      (top :screen screen :screens screens))

    (box :class "segment-middle"
         :valign "center"
      (middle :screen screen :screens screens))

    (box :class "segment-bottom"
         :valign "end"
      (bottom :screen screen :screens screens))))

(defwidget top [screen screens]
  (box :orientation "v"
    (workspaces :screen screen)

    (systray :orientation "v" :icon-size 15 :spacing 10)))

(defwidget middle [] (time))

(defwidget bottom [screen screens]
  (box :orientation "v"
       :valign "end"
       :space-evenly false
       :spacing "0"

    (box :visible "${screen == 1 || screens == 1}" (metric-battery))

    (box :visible "${screen == 1 || screens == 1}" (player))

    (box :visible "${screen == 1 || screens == 1}" (volume))

    (box :visible "${screen == 0 || screens == 1}" (metric-cpu))

    (box :visible "${screen == 0 || screens == 1}" (metric-gpu))

    (box :visible "${screen == 0 || screens == 1}" (metric-ram))

    (box :visible "${screen == 0 || screens == 1}" (metric-disk))

    (box :visible "${screen == 0 || screens == 1}" (metric-net))

    (kb-layout)

    (date)))
